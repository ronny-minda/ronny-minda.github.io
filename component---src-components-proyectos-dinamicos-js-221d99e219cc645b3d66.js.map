{"version":3,"file":"component---src-components-proyectos-dinamicos-js-221d99e219cc645b3d66.js","mappings":"sLAGIA,E,4DACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,oBAAbE,UAAgE,mBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBzB,4HCQA,ICFA,MAJA,SAAkBO,GAChB,MAAuB,iBAATA,GAAqB,OAAWA,IDG5CC,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBjD,MAjBA,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7ER,GAAQC,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,MAAMI,cAMzf,IAAK,EAASX,GACZ,MAAMY,UAAU,+BAGlB,OAAOZ,GEHT,I,EAAA,EApBA,SAAYa,EAASC,EAAKP,GAExB,IAAIQ,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQlB,KAAOA,KAK7C,GAHAoB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPP,EAASA,GAAU,EAEnB,IAAK,IAAIL,EAAI,EAAGA,EAAI,KAAMA,EACxBY,EAAIP,EAASL,GAAKa,EAAKb,GAGzB,OAAOY,EAGT,OAAO,EAAUC,I,UCSbE,EAAMC,EAAAA,GAAAA,IAAH,mxDAmJT,EAnD2B,SAAC,GAAW,IAE7BC,EAF4B,EAATC,KAEPC,mBAAmBC,MAAM,GAGnCC,EAAkDJ,EAAlDI,YAAaC,EAAqCL,EAArCK,YAAaC,EAAwBN,EAAxBM,OAE5BC,EAFoDP,EAAhBQ,YAElBC,MAAM,KAG9B,OAFAC,QAAQC,IAAI,CAACJ,IAAAA,IAGT,gCACA,gBAAC,IAAD,KACE,gBAACK,EAAA,MAAD,CACEC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,IAEjB,gBAAChB,EAAD,KAEE,uBAAKmB,UAAU,cACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,SACA,0BAAMb,GACN,yBAAKF,GAEL,yCAGEG,EAAIa,KAAK,SAACrC,GACR,OAAO,sBAAIsC,IAAKC,KAAYvC,MAKhC,gBAAC,EAAAwC,EAAD,CACIN,UAAU,MACVO,MAAOnB,EAAYoB,gBACnBC,IAAMpB","sources":["webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-default/./src/components/proyectosDinamicos.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","\nimport React from \"react\";\nimport { Link, graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Layout from \"./layout\";\n\n\n\n\nexport const query = graphql`\nquery($pro: String!) {\n    allDatoCmsProyecto(filter: {nombre: {eq: $pro}}) {\n      nodes {\n        nombre,\n        descripcion,\n        tecnologias,\n        imgproyecto{\n            gatsbyImageData\n        }\n      }\n    }\n  }\n`\n\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  .contenedor {\n    margin: 80px 0;\n    width: 85%;\n\n    @media (max-width: 600px) {\n      & {\n        width: 100%;\n      }\n    }\n\n    a {\n        // background-color: red;\n        margin: 20px;\n        text-decoration: none;\n        padding: 5px 15px;\n        transition: .2s text-shadow, .2s color, .5s box-shadow;\n        \n        .claro & {\n            box-shadow: 4px 4px 5px 0 #0002, -4px -4px 5px #fff;\n            color: #000;\n        }\n        .oscuro & {\n            box-shadow: 4px 4px 6px 0 #040404, -4px -4px 6px #363636;\n            color: #fff;\n        }\n        \n    }\n    a:active {\n        \n        .claro & {\n            box-shadow: 3px 3px 5px 0 #0002 inset, -2px -2px 5px #fff inset;\n        }\n        .oscuro & {\n            box-shadow: 3px 3px 5px 0 #040404 inset, -2px -2px 5px #363636 inset;\n        }\n    }\n    a:hover {\n        // background-color: red;\n        color: red;\n        text-shadow: 0px 0px 15px red;\n        \n        .claro & {\n            color: red;\n            text-shadow: 0px 0px 15px red;\n        }\n        .oscuro & {\n            color: #FF9797;\n            text-shadow: 0px 0px 15px red;\n        }\n\n    }\n    \n    h1 {\n      margin: 20px;\n      transition: .2s color;\n        \n        .claro & {\n            color: #000;\n        }\n        .oscuro & {\n            color: #fff;\n        }\n    }\n    p {\n      margin: 20px;\n      transition: .2s color;\n        \n        .claro & {\n            color: #000;\n        }\n        .oscuro & {\n            color: #fff;\n        }\n    }\n\n    h3 {\n      margin: 10px 20px;\n    }\n\n    li {\n      margin: 5px 40px;\n    }\n\n    .img {\n      margin: 20px;\n    }\n\n  }\n  \n`;\n\n\nconst ProyectosDinamicos = ({data}) =>{\n\n    const dato = data.allDatoCmsProyecto.nodes[0];\n\n\n    const { descripcion, imgproyecto, nombre, tecnologias } = dato;\n\n    const tec = tecnologias.split(',');\n    console.log({tec});\n\n    return (\n        <>\n        <Layout>\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <Div>\n\n              <div className=\"contenedor\">\n                <Link to='/' >ATRAS</Link>\n                <h1>{ nombre }</h1>\n                <p>{ descripcion }</p>\n\n                <h3>Tecnologias</h3>\n\n                {\n                  tec.map( (i) => {\n                    return <li key={uuidv4()}>{ i }</li>\n                  })\n                }\n                \n\n                <GatsbyImage\n                    className=\"img\"\n                    image={imgproyecto.gatsbyImageData}\n                    alt={ nombre }\n                />\n              </div>\n            </Div>\n\n          </motion.div>\n        </Layout>\n\n        </>\n    )\n\n}\n\n\nexport default ProyectosDinamicos;"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","Div","styled","dato","data","allDatoCmsProyecto","nodes","descripcion","imgproyecto","nombre","tec","tecnologias","split","console","log","motion","initial","opacity","animate","exit","className","Link","to","map","key","uuidv4","G","image","gatsbyImageData","alt"],"sourceRoot":""}